Version 0.7.4:
    * Added support for specifying NA marker in PrediXcan phenotype text file
Version 0.7.3:
    * Fixed issue in the upstream repository.
Version 0.7.2:
    * Additional PrediXcan features. Updated readmes and coumentation. HDF5 library changed its API so that we had to hot-fix our code.
Version 0.7.1:
    * Revamped PrediXcan, added trascriptome prediction step, support for bgen input and hdf5 output.
Version 0.7.0:
    * Migrated to python 3
Version 0.6.12:
    * Made some tests portable. Refactored some code to support genome coordinate mapping
Version 0.6.11:
    * Fixed edge case when using non-rsid variants in S-MultiXcan
Version 0.6.10:
    * Fixed wrong check in individual-level phenotypes for missing data
Version 0.6.9:
    * Fixed edge case in streamed covariance
Version 0.6.8:
    * Introduced and order to the prediction models' loading. This makes MetaXcan's streamed execution more robust.
Version 0.6.7:
    * Added streamlined execution option that keeps a low-memory profile at a small increase of running time, to handle large covariances
    * Debug mode: added command line argument to compute just the firt k genes present in the data
Version 0.6.6:
    * Added output of loadings and PC regression coefficients to MultiXcan output
Version 0.6.5:
    * Added support for model training genotypes to covariance builder
Version 0.6.4:
    * Minor refactoring. Added support for more primitive naming conventions in S-MulTiXcan
Version 0.6.3:
    * Reworked additional stats
Version 0.6.2:
    * Experimental support for single-snp models and non-rsid snps in models
Version 0.6.1:
    * Added logging in SPrediXcan to warn when the covariance matrix is close to singular
    * Bug fixing: Addressed case when SMultiXcan is used with a subset of the GTEx models
    * Bug fixes: Addressed edge case when SMulTiXcan is used few models, when a numerical resolution error caused no eigen value to pass the threshold\
    * Added a model name filter in SMulTiXcan to reduce load time.
Version 0.6.0:
    * Initial release of MulTiXcan (multi-tissue predixcan) implementation
Version 0.5.9:
    * Addressed edge case when the GWAS has no intersection with the prediciton model (most likely a naming issue)
Version 0.5.8:
    * Added --gwas_file to MetaXcan so that a single GWAS file can be used as input (alternative to --gwas_folder and --gwas_file_pattern)
Version 0.5.7:
    * Now input GWAS p-values that are too small (i.e. numerical resolution doesn't yield a finite zscore) can be thresholded as approximation.
Version 0.5.6.4:
    * The fix from the previous version didn't work all that well in most cases.
Version 0.5.6.3:
    * A warning was being issued when it shouldn't had been.
Version 0.5.6.2:
    * Fixed another corner case with input gwas files (empty line in gwas file)
Version 0.5.6.1:
    * Fixed some corner cases with input gwas files
Version 0.5.5
    * Had MetaXcan output keep the gene's ensemble id versions by default.
    * Updated Readme. Now points to MetaXcan's application to a 100 public GWAS.
Version 0.5.4
    * Bugfix for the case when there is no intersection between the prediction model's snps and  the GWAS'
    * Updated Readme.
Version 0.5.2
    * Had the MetaXcan output contain explicit -NA-
Version 0.5.1
    * Minor fix in M03_betas: alleles after reconciliation is now right (since it wasn't being used it held no impact)
Version 0.5.0
    * Overhauled logic, added more unit test coverage, switched to pandas for implementation, performance improvements
    * Header changed to lowercase
    * Parameters name change:
      beta_zscore_column to zscore_column
      weight_db_path to model_db_path
      compressed argument no longer needed
    * Writing intermediate files is no longer needed for MetaXcan, it is now optional
Version 0.3.5
    * Fixed logging for GTEx models
Version 0.3.4
    * Fixed formula for effect size output
Version 0.3.3
    * Refactor towards new feature development
    * Changed parameter names for MetaXcan scripts, to be more explicit about effect allele, and compressed argument meaning.
    * Expanded documentation with windows support example.
Version 0.3.2
    * Fixed script that generates variances from Im Lab's dosage files.
    * Now M03_betas.py can work on inputs without specifying any transcriptome model. This will just produce the input GWAS data in a different format.
    * Minor fix to be more lenient on input covariances.
Version 0.3.1
    * Various changes to MetaMany.py: 
        * Better flexibility for database organization.
        * Result files are now named GWAS-TISSUE to make them easier to identify
        * Betas are stored inside the output directory 
Version 0.3
    * New Transcriptome Model (Weight DBs) format support. Formalized Metaxcan output handling, added new fields to output (effect size, model prediction qvalue, etc)
Version 0.2.6
	* Fixed bug in --zscore_column option data handling
Version 0.2.5
	* Made some file handling errors more verbous. Added unit test for GWAS processing logic.
Version 0.2.4
	* Some input bug fixes. Added "MetaMany.py", a convenience for running MetaXcan with different tissue models on a single command.
Version 0.2.3
	* Added support for some GWAS input files. Improved unit test coverage.
Version 0.2.1
	* added option to zscores for saving ensembl versions
Version 0.2
	* Changed covariance format and runtime flag
